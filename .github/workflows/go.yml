name: Go

on:
  push:
  pull_request:
    branches: [ main ]

env:
  LATEST_GO_VERSION: "1.17"
  GO111MODULE: "on"

jobs:

  test:
    name: Test on go ${{ matrix.go_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go_version: ['1.16', '1.17']
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go_version }}

    - name: "Fetch dependencies"
      run: go mod download
            
      # Only run gofmt, vet & lint against the latest Go version
    - name: "Run golint"
      if: ${{ matrix.go_version == env.LATEST_GO_VERSION && matrix.os == 'ubuntu-latest'}}
      run: |
          go install golang.org/x/lint/golint@latest
          golint -set_exit_status $1 ./...
          exit $1

    - name: "Run gofmt"
      if: ${{ matrix.go_version == env.LATEST_GO_VERSION && matrix.os == 'ubuntu-latest'}}
      run: diff -u <(echo -n) <(gofmt -d -e .)

    - name: "Run go vet"
      if: ${{ matrix.go_version == env.LATEST_GO_VERSION && matrix.os == 'ubuntu-latest'}}
      run: go vet -v ./...

    - name: Build
      run: go build -v ./...

    #- name: Test
    #  run: go test -v ./...
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            raphaelpinto/featws-ruller
            ghcr.io/raphaelpinto/featws-ruller
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name == 'tag' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}