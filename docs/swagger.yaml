basePath: /api/v1
definitions:
  v1.Eval:
    additionalProperties: true
    type: object
host: localhost:8000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: |-
    O projeto Ruler é uma implementação do motor de regras [grule-rule-engine](https://github.com/hyperjumptech/grule-rule-engine), que é utilizado para avaliar regras no formato .grl . O Ruler permite que as regras definidas em arquivos .grl sejam avaliadas de maneira automática e eficiente, ajudando a automatizar as decisões tomadas pelo FeatWS. Isso possibilita que o sistema possa analisar e classificar grandes quantidades de informações de maneira rápida e precisa.

    Ao utilizar as regras fornecidas pelo projeto Ruler, o FeatWS é capaz de realizar análises de regras em larga escala e fornecer resultados precisos e relevantes para seus usuários. Isso é especialmente importante em áreas como análise de sentimentos em mídias sociais, detecção de fraudes financeiras e análise de dados em geral.

    Antes de realizar os testes no Swagger, é necessário autorizar o acesso clicando no botão **Authorize**, ao lado, e inserindo a senha correspondente. Após inserir o campo **value** e clicar no botão **Authorize**, o Swagger estará disponível para ser utilizado.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: FeatWS Ruler
  version: "1.0"
paths:
  /eval:
    post:
      consumes:
      - application/json
      description: |-
        Ao receber os parâmetros para executar as folhas de regras. A seguir é explicado com mais detalhes sobre os endpoints:

        - /Eval: Esse endpoint é utilizado apenas para aplicações que possuem uma única folha de regra padrão.
        - /Eval/{knowledgeBase}: Nesse endpoint é necessário colocar o parametro do nome da folha de regra
        - /Eval/{knowledgeBase}/{version}: Nesse endpoint é necessário colocar o parametro do nome da folha de regra como também o número da versão da folha de regra que você deseja escrever a regra.
      parameters:
      - description: knowledgeBase
        in: path
        name: knowledgeBase
        type: string
      - description: version
        in: path
        name: version
        type: string
      - description: Parameters
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/v1.Eval'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
        default:
          description: ""
          schema:
            type: string
      security:
      - Authentication Api Key: []
      summary: Evaluate the rulesheet / Avaliação da folha de Regra
      tags:
      - eval
  /eval/{knowledgeBase}:
    post:
      consumes:
      - application/json
      description: |-
        Ao receber os parâmetros para executar as folhas de regras. A seguir é explicado com mais detalhes sobre os endpoints:

        - /Eval: Esse endpoint é utilizado apenas para aplicações que possuem uma única folha de regra padrão.
        - /Eval/{knowledgeBase}: Nesse endpoint é necessário colocar o parametro do nome da folha de regra
        - /Eval/{knowledgeBase}/{version}: Nesse endpoint é necessário colocar o parametro do nome da folha de regra como também o número da versão da folha de regra que você deseja escrever a regra.
      parameters:
      - description: knowledgeBase
        in: path
        name: knowledgeBase
        type: string
      - description: version
        in: path
        name: version
        type: string
      - description: Parameters
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/v1.Eval'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
        default:
          description: ""
          schema:
            type: string
      security:
      - Authentication Api Key: []
      summary: Evaluate the rulesheet / Avaliação da folha de Regra
      tags:
      - eval
  /eval/{knowledgeBase}/{version}:
    post:
      consumes:
      - application/json
      description: |-
        Ao receber os parâmetros para executar as folhas de regras. A seguir é explicado com mais detalhes sobre os endpoints:

        - /Eval: Esse endpoint é utilizado apenas para aplicações que possuem uma única folha de regra padrão.
        - /Eval/{knowledgeBase}: Nesse endpoint é necessário colocar o parametro do nome da folha de regra
        - /Eval/{knowledgeBase}/{version}: Nesse endpoint é necessário colocar o parametro do nome da folha de regra como também o número da versão da folha de regra que você deseja escrever a regra.
      parameters:
      - description: knowledgeBase
        in: path
        name: knowledgeBase
        type: string
      - description: version
        in: path
        name: version
        type: string
      - description: Parameters
        in: body
        name: parameters
        required: true
        schema:
          $ref: '#/definitions/v1.Eval'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
        default:
          description: ""
          schema:
            type: string
      security:
      - Authentication Api Key: []
      summary: Evaluate the rulesheet / Avaliação da folha de Regra
      tags:
      - eval
securityDefinitions:
  Authentication Api Key:
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
